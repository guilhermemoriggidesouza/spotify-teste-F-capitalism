{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guilh\\\\Desktop\\\\client-IA-emotions\\\\aiemotions\\\\client\\\\src\\\\components\\\\Home.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'querystring';\nimport request from 'request';\n\nconst Home = props => {\n  const urlSearch = new URLSearchParams(props.location.search);\n  const [configSpotify, setConfigSpotify] = useState({\n    access_token: '',\n    refresh_token: ''\n  });\n\n  function conectSpotifyToken(authOptions) {\n    request.post(authOptions, (error, response, body) => {\n      if (!error && response.statusCode === 200) {\n        setConfigSpotify(body);\n      }\n    });\n  }\n\n  useEffect(() => {\n    conectarSpotify({\n      url: 'https://accounts.spotify.com/api/token',\n      form: {\n        grant_type: 'authorization_code',\n        code: urlSearch.get('code'),\n        redirect_uri: 'http://localhost:3000/home'\n      },\n      headers: {\n        'Authorization': 'Basic ' + Buffer('5b9475166c654131bb402fb4a6e463aa:875b53042f3b4787b502d4f81b5559c4').toString('base64')\n      },\n      json: true\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"acces token \", configSpotify.access_token), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"refresh token \", configSpotify.refresh_token));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/guilh/Desktop/client-IA-emotions/aiemotions/client/src/components/Home.js"],"names":["React","useState","useEffect","queryString","request","Home","props","urlSearch","URLSearchParams","location","search","configSpotify","setConfigSpotify","access_token","refresh_token","conectSpotifyToken","authOptions","post","error","response","body","statusCode","conectarSpotify","url","form","grant_type","code","get","redirect_uri","headers","Buffer","toString","json"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,SAApB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAS;AACpB,QAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoBF,KAAK,CAACG,QAAN,CAAeC,MAAnC,CAAlB;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC;AAACY,IAAAA,YAAY,EAAE,EAAf;AAAmBC,IAAAA,aAAa,EAAE;AAAlC,GAAD,CAAlD;;AAEA,WAASC,kBAAT,CAA4BC,WAA5B,EAAwC;AACtCZ,IAAAA,OAAO,CAACa,IAAR,CAAaD,WAAb,EAA0B,CAACE,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,KAAyB;AACjD,UAAG,CAACF,KAAD,IAAUC,QAAQ,CAACE,UAAT,KAAwB,GAArC,EAAyC;AACvCT,QAAAA,gBAAgB,CAACQ,IAAD,CAAhB;AACD;AACF,KAJD;AAKD;;AAEDlB,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,eAAe,CAAC;AACdC,MAAAA,GAAG,EAAE,wCADS;AAEdC,MAAAA,IAAI,EAAE;AACFC,QAAAA,UAAU,EAAK,oBADb;AAEFC,QAAAA,IAAI,EAAWnB,SAAS,CAACoB,GAAV,CAAc,MAAd,CAFb;AAGFC,QAAAA,YAAY,EAAG;AAHb,OAFQ;AAOdC,MAAAA,OAAO,EAAC;AACJ,yBAAiB,WAASC,MAAM,CAAC,mEAAD,CAAN,CAA4EC,QAA5E,CAAqF,QAArF;AADtB,OAPM;AAUdC,MAAAA,IAAI,EAAE;AAVQ,KAAD,CAAf;AAYD,GAbQ,CAAT;AAeA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBrB,aAAa,CAACE,YAA9B,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkBF,aAAa,CAACG,aAAhC,CAFF,CADF;AAMD,CAjCD;;AAmCA,eAAeT,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport queryString from 'querystring'\nimport request from 'request'\n\nconst Home = (props)=>{\n  const urlSearch = new URLSearchParams(props.location.search)\n  const [configSpotify, setConfigSpotify] = useState({access_token: '', refresh_token: ''})\n\n  function conectSpotifyToken(authOptions){\n    request.post(authOptions, (error, response, body)=>{\n      if(!error && response.statusCode === 200){\n        setConfigSpotify(body)\n      }\n    })\n  } \n\n  useEffect(() => { \n    conectarSpotify({\n      url: 'https://accounts.spotify.com/api/token',\n      form: {\n          grant_type:    'authorization_code',\n          code:          urlSearch.get('code'),\n          redirect_uri:  'http://localhost:3000/home',\n      },\n      headers:{\n          'Authorization': 'Basic '+Buffer('5b9475166c654131bb402fb4a6e463aa:875b53042f3b4787b502d4f81b5559c4').toString('base64')\n      },\n      json: true\n    })\n  });\n\n  return (\n    <div>\n      <p>acces token {configSpotify.access_token}</p>\n      <p>refresh token {configSpotify.refresh_token}</p>\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}