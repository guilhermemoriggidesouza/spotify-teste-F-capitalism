{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guilh\\\\Desktop\\\\client-IA-emotions\\\\aiemotions\\\\client\\\\src\\\\components\\\\Home.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { conectSpotifyWithCode, infosUserSpotify, playlistSpotify } from '../services/spotifyService';\nimport { connectionsContext } from '../context';\n\nconst Home = props => {\n  var _connection$access_to, _connection$refresh_t;\n\n  const urlSearch = new URLSearchParams(props.location.search);\n  const [connection, setConnection] = useContext(connectionsContext);\n  const [user, setUser] = useState({});\n  const [playlists, setPlaylists] = useState([]);\n\n  async function getTokenAuthorization(props) {\n    console.log('connection', connection);\n\n    if (!localStorage.access_token || !localStorage.refresh_token) {\n      setConnection({});\n      const tokens = await conectSpotifyWithCode('http://localhost:3000/home', urlSearch.get('code'), '5b9475166c654131bb402fb4a6e463aa:875b53042f3b4787b502d4f81b5559c4');\n      localStorage.access_token = tokens.access_token;\n      localStorage.refresh_token = tokens.refresh_token;\n      setConnection(localStorage);\n    }\n  }\n\n  async function getInfosUser() {\n    const infosUser = await infosUserSpotify(connection.access_token);\n    setUser(infosUser);\n    console.log(\"estado1\", user);\n  }\n\n  async function getPlaylists() {\n    const infosPlaylist = await playlistSpotify(user.user_id, connection.access_token);\n    setPlaylists(infosPlaylist);\n    console.log(playlists);\n  }\n\n  async function init() {\n    await getTokenAuthorization();\n    await getInfosUser();\n    console.log(\"estado2\", user);\n    await getPlaylists();\n  }\n\n  function cleanConnection() {\n    localStorage.clear();\n    setConnection({});\n    props.history.goBack(null);\n  }\n\n  useEffect(() => {\n    init();\n  }, [user, init]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"seu access token: \", (_connection$access_to = connection.access_token) !== null && _connection$access_to !== void 0 ? _connection$access_to : \"nada\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"seu refresh token: \", (_connection$refresh_t = connection.refresh_token) !== null && _connection$refresh_t !== void 0 ? _connection$refresh_t : \"nada\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: cleanConnection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"zerar bangue\"));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/guilh/Desktop/client-IA-emotions/aiemotions/client/src/components/Home.js"],"names":["React","useState","useEffect","useContext","conectSpotifyWithCode","infosUserSpotify","playlistSpotify","connectionsContext","Home","props","urlSearch","URLSearchParams","location","search","connection","setConnection","user","setUser","playlists","setPlaylists","getTokenAuthorization","console","log","localStorage","access_token","refresh_token","tokens","get","getInfosUser","infosUser","getPlaylists","infosPlaylist","user_id","init","cleanConnection","clear","history","goBack"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { conectSpotifyWithCode, infosUserSpotify, playlistSpotify} from '../services/spotifyService'\nimport { connectionsContext } from '../context'\n\nconst Home = (props)=>{\n  const urlSearch = new URLSearchParams(props.location.search)\n  const [connection, setConnection] = useContext(connectionsContext)\n  const [user, setUser] = useState({})\n  const [playlists, setPlaylists] = useState([])\n  \n  async function getTokenAuthorization(props){\n    console.log('connection', connection)\n    if(!localStorage.access_token || !localStorage.refresh_token){\n      setConnection({})\n      const tokens = await conectSpotifyWithCode(\n        'http://localhost:3000/home', \n        urlSearch.get('code'), \n        '5b9475166c654131bb402fb4a6e463aa:875b53042f3b4787b502d4f81b5559c4'\n      )\n      localStorage.access_token = tokens.access_token\n      localStorage.refresh_token = tokens.refresh_token\n      setConnection(localStorage)\n    }\n  }\n\n  async function getInfosUser(){\n    const infosUser = await infosUserSpotify(connection.access_token)\n    setUser(infosUser)\n    console.log(\"estado1\", user)\n  }\n\n  async function getPlaylists(){\n    const infosPlaylist = await playlistSpotify(user.user_id, connection.access_token)\n    setPlaylists(infosPlaylist)\n    console.log(playlists)\n  }\n\n  async function init(){\n    await getTokenAuthorization() \n    await getInfosUser()\n    console.log(\"estado2\", user)\n    await getPlaylists()\n  }  \n\n  function cleanConnection(){\n    localStorage.clear();\n    setConnection({})\n    props.history.goBack(null)\n  }\n\n  useEffect(() => { \n    init()\n  }, [user, init])\n\n  return (\n    <div>\n      <p>seu access token: {connection.access_token??\"nada\"}</p>\n      <p>seu refresh token: {connection.refresh_token??\"nada\"}</p>\n      {/* <p>Nome: {user.user_name??\"\"} <br></br> Id: {user.user_id}</p> */}\n      <ul>\n        {/* {playlists.map(element => <li>{element}</li>)} */}\n      </ul>\n      <button onClick={cleanConnection}>zerar bangue</button>\n    </div>\n  );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}