{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guilh\\\\Desktop\\\\client-IA-emotions\\\\aiemotions\\\\client\\\\src\\\\components\\\\Home.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { conectSpotifyWithCode, infosUserSpotify, playlistSpotify } from '../services/spotifyService';\nimport { connectionsContext } from '../context';\n\nconst Home = props => {\n  var _connection$access_to, _connection$refresh_t, _userSpotify$display_;\n\n  const urlSearch = new URLSearchParams(props.location.search);\n  const [connection, setConnection] = useContext(connectionsContext);\n  const [userSpotify, setUserSpotify] = useState(null);\n\n  async function getTokenAuthorization(props) {\n    if (!localStorage.access_token || !localStorage.refresh_token) {\n      setConnection({});\n      const tokens = await conectSpotifyWithCode('http://localhost:3000/home', urlSearch.get('code'), '5b9475166c654131bb402fb4a6e463aa:875b53042f3b4787b502d4f81b5559c4');\n      localStorage.access_token = tokens.access_token;\n      localStorage.refresh_token = tokens.refresh_token;\n      setConnection(localStorage);\n    }\n  }\n\n  async function getInfosUser() {\n    setUserSpotify({});\n    const infosUser = infosUserSpotify(connection.access_token);\n    setUserSpotify(infosUser);\n    console.log(\"estado1\", userSpotify);\n  } // async function getPlaylists(){\n  //   const infosPlaylist = await playlistSpotify(userSpotify.user_id, connection.access_token)\n  //   setPlaylists(infosPlaylist)\n  //   console.log(playlists)\n  // }\n\n\n  function init() {\n    getTokenAuthorization();\n    getInfosUser(); // await getPlaylists()\n  }\n\n  function cleanConnection() {\n    localStorage.clear();\n    setConnection({});\n    props.history.goBack(null);\n  }\n\n  useEffect(() => {\n    init();\n    console.log(\"aaa\", userSpotify);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"seu access token: \", (_connection$access_to = connection.access_token) !== null && _connection$access_to !== void 0 ? _connection$access_to : \"nada\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"seu refresh token: \", (_connection$refresh_t = connection.refresh_token) !== null && _connection$refresh_t !== void 0 ? _connection$refresh_t : \"nada\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Nome: \", (_userSpotify$display_ = userSpotify === null || userSpotify === void 0 ? void 0 : userSpotify.display_name) !== null && _userSpotify$display_ !== void 0 ? _userSpotify$display_ : \"\", \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 48\n    }\n  }), \" Id: \", userSpotify === null || userSpotify === void 0 ? void 0 : userSpotify.id), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: cleanConnection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"zerar bangue\"));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/guilh/Desktop/client-IA-emotions/aiemotions/client/src/components/Home.js"],"names":["React","useState","useEffect","useContext","conectSpotifyWithCode","infosUserSpotify","playlistSpotify","connectionsContext","Home","props","urlSearch","URLSearchParams","location","search","connection","setConnection","userSpotify","setUserSpotify","getTokenAuthorization","localStorage","access_token","refresh_token","tokens","get","getInfosUser","infosUser","console","log","init","cleanConnection","clear","history","goBack","display_name","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,qBAAT,EAAgCC,gBAAhC,EAAkDC,eAAlD,QAAwE,4BAAxE;AACA,SAASC,kBAAT,QAAmC,YAAnC;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAS;AAAA;;AACpB,QAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoBF,KAAK,CAACG,QAAN,CAAeC,MAAnC,CAAlB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,UAAU,CAACI,kBAAD,CAA9C;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,IAAD,CAA9C;;AAEA,iBAAeiB,qBAAf,CAAqCT,KAArC,EAA2C;AACzC,QAAG,CAACU,YAAY,CAACC,YAAd,IAA8B,CAACD,YAAY,CAACE,aAA/C,EAA6D;AAC3DN,MAAAA,aAAa,CAAC,EAAD,CAAb;AACA,YAAMO,MAAM,GAAG,MAAMlB,qBAAqB,CACxC,4BADwC,EAExCM,SAAS,CAACa,GAAV,CAAc,MAAd,CAFwC,EAGxC,mEAHwC,CAA1C;AAKAJ,MAAAA,YAAY,CAACC,YAAb,GAA4BE,MAAM,CAACF,YAAnC;AACAD,MAAAA,YAAY,CAACE,aAAb,GAA6BC,MAAM,CAACD,aAApC;AACAN,MAAAA,aAAa,CAACI,YAAD,CAAb;AACD;AACF;;AAED,iBAAeK,YAAf,GAA6B;AAC3BP,IAAAA,cAAc,CAAC,EAAD,CAAd;AACA,UAAMQ,SAAS,GAAGpB,gBAAgB,CAACS,UAAU,CAACM,YAAZ,CAAlC;AACAH,IAAAA,cAAc,CAACQ,SAAD,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBX,WAAvB;AACD,GAxBmB,CA0BpB;AACA;AACA;AACA;AACA;;;AAEA,WAASY,IAAT,GAAe;AACbV,IAAAA,qBAAqB;AACrBM,IAAAA,YAAY,GAFC,CAGb;AACD;;AAED,WAASK,eAAT,GAA0B;AACxBV,IAAAA,YAAY,CAACW,KAAb;AACAf,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAN,IAAAA,KAAK,CAACsB,OAAN,CAAcC,MAAd,CAAqB,IAArB;AACD;;AAED9B,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,IAAI;AACJF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBX,WAAnB;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAAsBF,UAAU,CAACM,YAAjC,yEAA+C,MAA/C,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAAuBN,UAAU,CAACO,aAAlC,yEAAiD,MAAjD,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAUL,WAAV,aAAUA,WAAV,uBAAUA,WAAW,CAAEiB,YAAvB,yEAAqC,EAArC,oBAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzC,WAAwDjB,WAAxD,aAAwDA,WAAxD,uBAAwDA,WAAW,CAAEkB,EAArE,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAOE;AAAQ,IAAA,OAAO,EAAEL,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,CADF;AAWD,CA5DD;;AA8DA,eAAerB,IAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { conectSpotifyWithCode, infosUserSpotify, playlistSpotify} from '../services/spotifyService'\nimport { connectionsContext } from '../context'\n\nconst Home = (props)=>{\n  const urlSearch = new URLSearchParams(props.location.search)\n  const [connection, setConnection] = useContext(connectionsContext)\n  const [userSpotify, setUserSpotify] = useState(null)\n  \n  async function getTokenAuthorization(props){\n    if(!localStorage.access_token || !localStorage.refresh_token){\n      setConnection({})\n      const tokens = await conectSpotifyWithCode(\n        'http://localhost:3000/home', \n        urlSearch.get('code'), \n        '5b9475166c654131bb402fb4a6e463aa:875b53042f3b4787b502d4f81b5559c4'\n      )\n      localStorage.access_token = tokens.access_token\n      localStorage.refresh_token = tokens.refresh_token\n      setConnection(localStorage)\n    }\n  }\n\n  async function getInfosUser(){\n    setUserSpotify({})\n    const infosUser = infosUserSpotify(connection.access_token)\n    setUserSpotify(infosUser)\n    console.log(\"estado1\", userSpotify)\n  }\n\n  // async function getPlaylists(){\n  //   const infosPlaylist = await playlistSpotify(userSpotify.user_id, connection.access_token)\n  //   setPlaylists(infosPlaylist)\n  //   console.log(playlists)\n  // }\n\n  function init(){\n    getTokenAuthorization() \n    getInfosUser()\n    // await getPlaylists()\n  }  \n\n  function cleanConnection(){\n    localStorage.clear();\n    setConnection({})\n    props.history.goBack(null)\n  }\n\n  useEffect(() => { \n    init()\n    console.log(\"aaa\", userSpotify)\n  }, [])\n\n  return (\n    <div>\n      <p>seu access token: {connection.access_token??\"nada\"}</p>\n      <p>seu refresh token: {connection.refresh_token??\"nada\"}</p>\n      <p>Nome: {userSpotify?.display_name??\"\"} <br></br> Id: {userSpotify?.id}</p>\n      <ul>\n        {/* {playlists.map(element => <li>{element}</li>)} */}\n      </ul>\n      <button onClick={cleanConnection}>zerar bangue</button>\n    </div>\n  );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}