{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guilh\\\\Desktop\\\\client-IA-emotions\\\\aiemotions\\\\client\\\\src\\\\components\\\\Home.js\";\nimport React, { useState, useEffect, useContext, useReducer } from 'react';\nimport { conectSpotifyWithCode, infosUserSpotify } from '../services/spotifyService';\nimport { connectionsContext } from '../context';\n\nconst Home = props => {\n  var _connection$access_to, _connection$refresh_t, _user$user_name;\n\n  const urlSearch = new URLSearchParams(props.location.search);\n  const [connection, setConnection] = useContext(connectionsContext);\n  const [user, setUser] = useState({});\n  const [playlists, setPlaylists] = useState([]);\n\n  async function getTokenAuthorization(props) {\n    if (!localStorage.access_token || !localStorage.refresh_token) {\n      setConnection({});\n      const tokens = await conectSpotifyWithCode('http://localhost:3000/home', urlSearch.get('code'), '5b9475166c654131bb402fb4a6e463aa:875b53042f3b4787b502d4f81b5559c4');\n      localStorage.access_token = tokens.access_token;\n      localStorage.refresh_token = tokens.refresh_token;\n      setConnection(localStorage);\n      console.log(\"connection\", connection);\n    }\n  }\n\n  async function getInfosUser() {\n    const infosUser = await infosUserSpotify(connection.access_token);\n    setUser({\n      user_name: infosUser.display_name,\n      user_id: infosUser.id\n    });\n    return infosUser.id;\n  }\n\n  async function getPlaylists() {}\n\n  async function init() {\n    await getTokenAuthorization();\n    const userId = await getInfosUser();\n    await getPlaylists(userId);\n  }\n\n  function cleanConnection() {\n    localStorage.clear();\n    setConnection({});\n    props.history.goBack(null);\n  }\n\n  useEffect(() => {\n    init();\n    console.log(user);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"seu access token: \", (_connection$access_to = connection.access_token) !== null && _connection$access_to !== void 0 ? _connection$access_to : \"nada\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"seu refresh token: \", (_connection$refresh_t = connection.refresh_token) !== null && _connection$refresh_t !== void 0 ? _connection$refresh_t : \"nada\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Nome: \", (_user$user_name = user.user_name) !== null && _user$user_name !== void 0 ? _user$user_name : \"\", \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 37\n    }\n  }), \" Id:\", user.user_id), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, playlists.map(element => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 35\n    }\n  }, element))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: cleanConnection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"zerar bangue\"));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/guilh/Desktop/client-IA-emotions/aiemotions/client/src/components/Home.js"],"names":["React","useState","useEffect","useContext","useReducer","conectSpotifyWithCode","infosUserSpotify","connectionsContext","Home","props","urlSearch","URLSearchParams","location","search","connection","setConnection","user","setUser","playlists","setPlaylists","getTokenAuthorization","localStorage","access_token","refresh_token","tokens","get","console","log","getInfosUser","infosUser","user_name","display_name","user_id","id","getPlaylists","init","userId","cleanConnection","clear","history","goBack","map","element"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useReducer } from 'react';\nimport { conectSpotifyWithCode, infosUserSpotify} from '../services/spotifyService'\nimport { connectionsContext } from '../context'\n\nconst Home = (props)=>{\n  const urlSearch = new URLSearchParams(props.location.search)\n  const [connection, setConnection] = useContext(connectionsContext)\n  const [user, setUser] = useState({})\n  const [playlists, setPlaylists] = useState([])\n  \n  async function getTokenAuthorization(props){\n    if(!localStorage.access_token || !localStorage.refresh_token){\n      setConnection({})\n      const tokens = await conectSpotifyWithCode(\n        'http://localhost:3000/home', \n        urlSearch.get('code'), \n        '5b9475166c654131bb402fb4a6e463aa:875b53042f3b4787b502d4f81b5559c4'\n      )\n      localStorage.access_token = tokens.access_token\n      localStorage.refresh_token = tokens.refresh_token\n      setConnection(localStorage)\n      console.log(\"connection\", connection)\n    }\n  }\n\n  async function getInfosUser(){\n    const infosUser = await infosUserSpotify(connection.access_token)\n    setUser({\n      user_name: infosUser.display_name,\n      user_id: infosUser.id\n    })\n    return infosUser.id\n  }\n\n  async function getPlaylists(){\n\n  }\n\n  async function init(){\n    await getTokenAuthorization() \n    const userId = await getInfosUser()\n    await getPlaylists(userId)\n  }  \n\n  function cleanConnection(){\n    localStorage.clear();\n    setConnection({})\n    props.history.goBack(null)\n  }\n\n  useEffect(() => { \n    init()\n    console.log(user)\n  }, [])\n\n  return (\n    <div>\n      <p>seu access token: {connection.access_token??\"nada\"}</p>\n      <p>seu refresh token: {connection.refresh_token??\"nada\"}</p>\n      <p>Nome: {user.user_name??\"\"} <br></br> Id:{user.user_id}</p>\n      <ul>\n        {playlists.map(element => <li>{element}</li>)}\n      </ul>\n      <button onClick={cleanConnection}>zerar bangue</button>\n    </div>\n  );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}