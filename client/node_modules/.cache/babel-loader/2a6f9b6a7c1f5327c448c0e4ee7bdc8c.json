{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guilh\\\\Desktop\\\\client-IA-emotions\\\\aiemotions\\\\client\\\\src\\\\components\\\\Home.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { conectSpotifyWithCode, infosUserSpotify, playlistSpotify } from '../services/spotifyService';\nimport { connectionsContext } from '../context';\nimport SpotifyPlayer from 'react-spotify-web-playback';\n\nconst Home = props => {\n  var _connection$access_to, _connection$refresh_t, _user$user_name;\n\n  const urlSearch = new URLSearchParams(props.location.search);\n  const [connection, setConnection] = useContext(connectionsContext);\n  const [user, setUser] = useState({});\n  const [playlists, setPlaylists] = useState([]);\n\n  async function getTokenAuthorization() {\n    if (!localStorage.access_token || !localStorage.refresh_token) {\n      setConnection({});\n      const tokens = await conectSpotifyWithCode('http://localhost:3000/home', urlSearch.get('code'), '5b9475166c654131bb402fb4a6e463aa:2f41ca3eff9d4de1bc6c480ebfd378e3');\n      localStorage.access_token = tokens.access_token;\n      localStorage.refresh_token = tokens.refresh_token;\n      setConnection(localStorage);\n    }\n  }\n\n  async function getInfosUser() {\n    const infosUser = await infosUserSpotify(connection.access_token);\n    setUser({\n      user_name: infosUser.display_name,\n      user_id: infosUser.id\n    });\n    return infosUser.id;\n  }\n\n  async function getPlaylists(userId) {\n    const infosSpotify = await playlistSpotify(userId, connection.access_token);\n    console.log(infosSpotify);\n    setPlaylists(infosSpotify.items);\n  }\n\n  async function init() {\n    await getTokenAuthorization();\n    const userId = await getInfosUser();\n    await getPlaylists(userId);\n  }\n\n  function cleanConnection() {\n    localStorage.clear();\n    setConnection({});\n    props.history.goBack(null);\n  }\n\n  useEffect(() => {\n    init();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"seu access token: \", (_connection$access_to = connection.access_token) !== null && _connection$access_to !== void 0 ? _connection$access_to : \"nada\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"seu refresh token: \", (_connection$refresh_t = connection.refresh_token) !== null && _connection$refresh_t !== void 0 ? _connection$refresh_t : \"nada\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Nome: \", (_user$user_name = user.user_name) !== null && _user$user_name !== void 0 ? _user$user_name : \"\", \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 37\n    }\n  }), \" Id:\", user.user_id), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, playlists.map((element, i) => /*#__PURE__*/React.createElement(\"li\", {\n    key: element.name + i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 40\n    }\n  }, element.name))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: cleanConnection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"zerar bangue\"), /*#__PURE__*/React.createElement(SpotifyPlayer, {\n    token: connection.access_token,\n    uris: ['spotify:playlist:37i9dQZF1DX2sUQwD7tbmL'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), \";\");\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/guilh/Desktop/client-IA-emotions/aiemotions/client/src/components/Home.js"],"names":["React","useState","useEffect","useContext","conectSpotifyWithCode","infosUserSpotify","playlistSpotify","connectionsContext","SpotifyPlayer","Home","props","urlSearch","URLSearchParams","location","search","connection","setConnection","user","setUser","playlists","setPlaylists","getTokenAuthorization","localStorage","access_token","refresh_token","tokens","get","getInfosUser","infosUser","user_name","display_name","user_id","id","getPlaylists","userId","infosSpotify","console","log","items","init","cleanConnection","clear","history","goBack","map","element","i","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { conectSpotifyWithCode, infosUserSpotify, playlistSpotify } from '../services/spotifyService'\nimport { connectionsContext } from '../context'\nimport SpotifyPlayer from 'react-spotify-web-playback';\n\nconst Home = (props)=>{\n  const urlSearch = new URLSearchParams(props.location.search)\n  const [connection, setConnection] = useContext(connectionsContext)\n  const [user, setUser] = useState({})\n  const [playlists, setPlaylists] = useState([])\n  \n  async function getTokenAuthorization(){\n    if(!localStorage.access_token || !localStorage.refresh_token){\n      setConnection({})\n      const tokens = await conectSpotifyWithCode(\n        'http://localhost:3000/home', \n        urlSearch.get('code'), \n        '5b9475166c654131bb402fb4a6e463aa:2f41ca3eff9d4de1bc6c480ebfd378e3'\n      )\n      localStorage.access_token = tokens.access_token\n      localStorage.refresh_token = tokens.refresh_token\n      setConnection(localStorage)\n    }\n  }\n\n  async function getInfosUser(){\n    const infosUser = await infosUserSpotify(connection.access_token)\n    setUser({\n      user_name: infosUser.display_name,\n      user_id: infosUser.id\n    })\n    return infosUser.id\n  }\n\n  async function getPlaylists(userId){\n    const infosSpotify = await playlistSpotify(userId, connection.access_token)\n    console.log(infosSpotify)\n    setPlaylists(infosSpotify.items)\n  }\n\n  async function init(){\n    await getTokenAuthorization() \n    const userId = await getInfosUser()\n    await getPlaylists(userId)\n  }  \n\n  function cleanConnection(){\n    localStorage.clear();\n    setConnection({})\n    props.history.goBack(null)\n  }\n\n  useEffect(() => { \n    init()\n  }, [])\n\n  return (\n    <div>\n      <p>seu access token: {connection.access_token??\"nada\"}</p>\n      <p>seu refresh token: {connection.refresh_token??\"nada\"}</p>\n      <p>Nome: {user.user_name??\"\"} <br></br> Id:{user.user_id}</p>\n      <ul>\n        {playlists.map((element, i) => <li key={element.name+i}>{element.name}</li>)}\n      </ul>\n      <button onClick={cleanConnection}>zerar bangue</button>\n      <SpotifyPlayer\n        token={connection.access_token}\n        uris={['spotify:playlist:37i9dQZF1DX2sUQwD7tbmL']}\n      />;\n    </div>\n  );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}