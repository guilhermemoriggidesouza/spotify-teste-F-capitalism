{"ast":null,"code":"import querystring from 'querystring';\nimport request from 'request';\nexport function conectSpotifyWithToken(callbackUrl, code, urlSpotify, base64ClientIdSecrect) {\n  const authOptions = {\n    url: urlSpotify,\n    form: {\n      grant_type: 'authorization_code',\n      code: code,\n      redirect_uri: callbackUrl\n    },\n    headers: {\n      'Authorization': 'Basic ' + Buffer(base64ClientIdSecrect).toString('base64')\n    },\n    json: true\n  };\n  console.log(); // request.post(authOptions, (error, response, body)=>{\n  //     console.log('1')\n  //     if(!error && response.statusCode === 200){\n  //         return body\n  //     }else{\n  //         return { error: error, body: body,response: response }\n  //     }\n  // })\n}\nexport function loginSpotify(clientId, callbackUrl, urlSpotify) {\n  window.location.href = urlSpotify\n  /**/\n  + querystring.stringify({\n    response_type: 'code',\n    client_id: clientId,\n    scope: 'user-read-private user-read-email',\n    redirect_uri: callbackUrl\n  });\n}","map":{"version":3,"sources":["C:/Users/guilh/Desktop/client-IA-emotions/aiemotions/client/src/services/spotifyService.js"],"names":["querystring","request","conectSpotifyWithToken","callbackUrl","code","urlSpotify","base64ClientIdSecrect","authOptions","url","form","grant_type","redirect_uri","headers","Buffer","toString","json","console","log","loginSpotify","clientId","window","location","href","stringify","response_type","client_id","scope"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,OAAO,SAASC,sBAAT,CAAgCC,WAAhC,EAA6CC,IAA7C,EAAmDC,UAAnD,EAA+DC,qBAA/D,EAAqF;AACxF,QAAMC,WAAW,GAAG;AAChBC,IAAAA,GAAG,EAAEH,UADW;AAEhBI,IAAAA,IAAI,EAAE;AACFC,MAAAA,UAAU,EAAE,oBADV;AAEFN,MAAAA,IAAI,EAAEA,IAFJ;AAGFO,MAAAA,YAAY,EAAER;AAHZ,KAFU;AAOhBS,IAAAA,OAAO,EAAC;AACJ,uBAAiB,WAASC,MAAM,CAACP,qBAAD,CAAN,CAA8BQ,QAA9B,CAAuC,QAAvC;AADtB,KAPQ;AAUhBC,IAAAA,IAAI,EAAE;AAVU,GAApB;AAYAC,EAAAA,OAAO,CAACC,GAAR,GAbwF,CAcxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AAED,OAAO,SAASC,YAAT,CAAsBC,QAAtB,EAAgChB,WAAhC,EAA6CE,UAA7C,EAAwD;AAC3De,EAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBjB;AAAU;AAAA,IACjCL,WAAW,CAACuB,SAAZ,CAAsB;AAClBC,IAAAA,aAAa,EAAE,MADG;AAElBC,IAAAA,SAAS,EAACN,QAFQ;AAGlBO,IAAAA,KAAK,EAAE,mCAHW;AAIlBf,IAAAA,YAAY,EAAER;AAJI,GAAtB,CADA;AAOH","sourcesContent":["import querystring from 'querystring'\r\nimport request from 'request'\r\n\r\nexport function conectSpotifyWithToken(callbackUrl, code, urlSpotify, base64ClientIdSecrect){\r\n    const authOptions = { \r\n        url: urlSpotify,\r\n        form: {\r\n            grant_type: 'authorization_code',\r\n            code: code,\r\n            redirect_uri: callbackUrl,\r\n        },\r\n        headers:{\r\n            'Authorization': 'Basic '+Buffer(base64ClientIdSecrect).toString('base64')\r\n        },\r\n        json: true\r\n    }\r\n    console.log()\r\n    // request.post(authOptions, (error, response, body)=>{\r\n    //     console.log('1')\r\n    //     if(!error && response.statusCode === 200){\r\n    //         return body\r\n    //     }else{\r\n    //         return { error: error, body: body,response: response }\r\n    //     }\r\n    // })\r\n}\r\n\r\nexport function loginSpotify(clientId, callbackUrl, urlSpotify){\r\n    window.location.href = urlSpotify/**/+\r\n    querystring.stringify({\r\n        response_type: 'code',\r\n        client_id:clientId,\r\n        scope: 'user-read-private user-read-email', \r\n        redirect_uri: callbackUrl\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}