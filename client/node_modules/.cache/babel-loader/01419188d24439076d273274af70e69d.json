{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guilh\\\\Desktop\\\\client-IA-emotions\\\\aiemotions\\\\client\\\\src\\\\components\\\\Home.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { conectSpotifyWithCode } from '../services/spotifyService';\nimport { connectionsContext } from '../context';\nimport { withRouter } from 'react-router-dom';\nimport Login from './Login';\n\nconst Home = props => {\n  var _connection$access_to, _connection$refresh_t;\n\n  const urlSearch = new URLSearchParams(props.location.search);\n  const [connection, setConnection] = useContext(connectionsContext);\n\n  async function getTokenAuthorization(props) {\n    if (!localStorage.connection) {\n      const tokens = await conectSpotifyWithCode('http://localhost:3000/home', urlSearch.get('code'), 'https://accounts.spotify.com/api/token', '5b9475166c654131bb402fb4a6e463aa:875b53042f3b4787b502d4f81b5559c4');\n      localStorage.connection = tokens;\n      setConnection(localStorage.connection);\n    }\n\n    console.log(localStorage.connection);\n  }\n\n  function cleanConnection() {\n    localStorage.connection = \"undefined\";\n    props.history.goBack(null);\n  }\n\n  useEffect(() => {\n    getTokenAuthorization();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"seu access token: \", (_connection$access_to = connection.access_token) !== null && _connection$access_to !== void 0 ? _connection$access_to : connection.error), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"seu refresh token: \", (_connection$refresh_t = connection.refresh_token) !== null && _connection$refresh_t !== void 0 ? _connection$refresh_t : connection.error_description), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: cleanConnection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"zerar bangue\"));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/guilh/Desktop/client-IA-emotions/aiemotions/client/src/components/Home.js"],"names":["React","useState","useEffect","useContext","conectSpotifyWithCode","connectionsContext","withRouter","Login","Home","props","urlSearch","URLSearchParams","location","search","connection","setConnection","getTokenAuthorization","localStorage","tokens","get","console","log","cleanConnection","history","goBack","access_token","error","refresh_token","error_description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,qBAAT,QAAsC,4BAAtC;AACA,SAASC,kBAAT,QAAmC,YAAnC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAS;AAAA;;AACpB,QAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoBF,KAAK,CAACG,QAAN,CAAeC,MAAnC,CAAlB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,UAAU,CAACE,kBAAD,CAA9C;;AAEA,iBAAeW,qBAAf,CAAqCP,KAArC,EAA2C;AAEzC,QAAG,CAACQ,YAAY,CAACH,UAAjB,EAA4B;AAC1B,YAAMI,MAAM,GAAG,MAAMd,qBAAqB,CACxC,4BADwC,EAExCM,SAAS,CAACS,GAAV,CAAc,MAAd,CAFwC,EAGxC,wCAHwC,EAIxC,mEAJwC,CAA1C;AAMAF,MAAAA,YAAY,CAACH,UAAb,GAA0BI,MAA1B;AACAH,MAAAA,aAAa,CAACE,YAAY,CAACH,UAAd,CAAb;AACD;;AACDM,IAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAY,CAACH,UAAzB;AACD;;AAED,WAASQ,eAAT,GAA0B;AACxBL,IAAAA,YAAY,CAACH,UAAb,GAA0B,WAA1B;AACAL,IAAAA,KAAK,CAACc,OAAN,CAAcC,MAAd,CAAqB,IAArB;AACD;;AAEDtB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,qBAAqB;AACtB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAAsBF,UAAU,CAACW,YAAjC,yEAA+CX,UAAU,CAACY,KAA1D,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAAuBZ,UAAU,CAACa,aAAlC,yEAAiDb,UAAU,CAACc,iBAA5D,CAFF,eAGE;AAAQ,IAAA,OAAO,EAAEN,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CADF;AAOD,CAnCD;;AAqCA,eAAed,IAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { conectSpotifyWithCode } from '../services/spotifyService'\nimport { connectionsContext } from '../context'\nimport { withRouter } from 'react-router-dom';\nimport Login from './Login';\n\nconst Home = (props)=>{\n  const urlSearch = new URLSearchParams(props.location.search)\n  const [connection, setConnection] = useContext(connectionsContext)\n  \n  async function getTokenAuthorization(props){\n    \n    if(!localStorage.connection){\n      const tokens = await conectSpotifyWithCode(\n        'http://localhost:3000/home', \n        urlSearch.get('code'), \n        'https://accounts.spotify.com/api/token', \n        '5b9475166c654131bb402fb4a6e463aa:875b53042f3b4787b502d4f81b5559c4'\n      )\n      localStorage.connection = tokens\n      setConnection(localStorage.connection)\n    }\n    console.log(localStorage.connection)\n  }\n\n  function cleanConnection(){\n    localStorage.connection = \"undefined\"\n    props.history.goBack(null)\n  }\n\n  useEffect(() => { \n    getTokenAuthorization()  \n  }, [])\n\n  return (\n    <div>\n      <p>seu access token: {connection.access_token??connection.error}</p>\n      <p>seu refresh token: {connection.refresh_token??connection.error_description}</p>\n      <button onClick={cleanConnection}>zerar bangue</button>\n    </div>\n  );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}