{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guilh\\\\Desktop\\\\client-IA-emotions\\\\aiemotions\\\\client\\\\src\\\\components\\\\Home.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { conectSpotifyWithCode } from '../services/spotifyService';\nimport { connectionsContext } from '../context';\nimport { withRouter } from 'react-router-dom';\nimport Login from './Login';\n\nconst Home = props => {\n  var _connection$access_to, _connection$refresh_t;\n\n  const urlSearch = new URLSearchParams(props.location.search);\n  const [connection, setConnection] = useContext(connectionsContext);\n\n  async function getTokenAuthorization(props) {\n    console.log(connection.access_token);\n\n    if (localStorage.access_token == \"\" || localStorage.refresh_token == \"\") {\n      const tokens = await conectSpotifyWithCode('http://localhost:3000/home', urlSearch.get('code'), 'https://accounts.spotify.com/api/token', '5b9475166c654131bb402fb4a6e463aa:875b53042f3b4787b502d4f81b5559c4');\n      localStorage.access_token = tokens.access_token;\n      localStorage.refresh_token = tokens.refresh_token;\n      setConnection(localStorage);\n      console.log(localStorage.access_token, localStorage.refresh_token);\n    }\n  }\n\n  function cleanConnection() {\n    console.log(localStorage.access_token, localStorage.refresh_token);\n    localStorage.access_token = \"\";\n    localStorage.refresh_token = \"\";\n    setConnection({});\n    props.history.goBack(null);\n  }\n\n  useEffect(() => {\n    getTokenAuthorization();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"seu access token: \", (_connection$access_to = connection.access_token) !== null && _connection$access_to !== void 0 ? _connection$access_to : connection.error), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"seu refresh token: \", (_connection$refresh_t = connection.refresh_token) !== null && _connection$refresh_t !== void 0 ? _connection$refresh_t : connection.error_description), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: cleanConnection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"zerar bangue\"));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/guilh/Desktop/client-IA-emotions/aiemotions/client/src/components/Home.js"],"names":["React","useState","useEffect","useContext","conectSpotifyWithCode","connectionsContext","withRouter","Login","Home","props","urlSearch","URLSearchParams","location","search","connection","setConnection","getTokenAuthorization","console","log","access_token","localStorage","refresh_token","tokens","get","cleanConnection","history","goBack","error","error_description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,qBAAT,QAAsC,4BAAtC;AACA,SAASC,kBAAT,QAAmC,YAAnC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAS;AAAA;;AACpB,QAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoBF,KAAK,CAACG,QAAN,CAAeC,MAAnC,CAAlB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,UAAU,CAACE,kBAAD,CAA9C;;AAEA,iBAAeW,qBAAf,CAAqCP,KAArC,EAA2C;AACzCQ,IAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAU,CAACK,YAAvB;;AACA,QAAGC,YAAY,CAACD,YAAb,IAA6B,EAA7B,IAAmCC,YAAY,CAACC,aAAb,IAA8B,EAApE,EAAuE;AACrE,YAAMC,MAAM,GAAG,MAAMlB,qBAAqB,CACxC,4BADwC,EAExCM,SAAS,CAACa,GAAV,CAAc,MAAd,CAFwC,EAGxC,wCAHwC,EAIxC,mEAJwC,CAA1C;AAMAH,MAAAA,YAAY,CAACD,YAAb,GAA4BG,MAAM,CAACH,YAAnC;AACAC,MAAAA,YAAY,CAACC,aAAb,GAA6BC,MAAM,CAACD,aAApC;AACAN,MAAAA,aAAa,CAACK,YAAD,CAAb;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYE,YAAY,CAACD,YAAzB,EAAuCC,YAAY,CAACC,aAApD;AACD;AACF;;AAED,WAASG,eAAT,GAA0B;AACxBP,IAAAA,OAAO,CAACC,GAAR,CAAYE,YAAY,CAACD,YAAzB,EAAuCC,YAAY,CAACC,aAApD;AACAD,IAAAA,YAAY,CAACD,YAAb,GAA4B,EAA5B;AACAC,IAAAA,YAAY,CAACC,aAAb,GAA6B,EAA7B;AACAN,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAN,IAAAA,KAAK,CAACgB,OAAN,CAAcC,MAAd,CAAqB,IAArB;AACD;;AAEDxB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,qBAAqB;AACtB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAAsBF,UAAU,CAACK,YAAjC,yEAA+CL,UAAU,CAACa,KAA1D,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAAuBb,UAAU,CAACO,aAAlC,yEAAiDP,UAAU,CAACc,iBAA5D,CAFF,eAGE;AAAQ,IAAA,OAAO,EAAEJ,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CADF;AAOD,CAvCD;;AAyCA,eAAehB,IAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { conectSpotifyWithCode } from '../services/spotifyService'\nimport { connectionsContext } from '../context'\nimport { withRouter } from 'react-router-dom';\nimport Login from './Login';\n\nconst Home = (props)=>{\n  const urlSearch = new URLSearchParams(props.location.search)\n  const [connection, setConnection] = useContext(connectionsContext)\n  \n  async function getTokenAuthorization(props){\n    console.log(connection.access_token)\n    if(localStorage.access_token == \"\" || localStorage.refresh_token == \"\"){\n      const tokens = await conectSpotifyWithCode(\n        'http://localhost:3000/home', \n        urlSearch.get('code'), \n        'https://accounts.spotify.com/api/token', \n        '5b9475166c654131bb402fb4a6e463aa:875b53042f3b4787b502d4f81b5559c4'\n      )\n      localStorage.access_token = tokens.access_token\n      localStorage.refresh_token = tokens.refresh_token\n      setConnection(localStorage)\n      console.log(localStorage.access_token, localStorage.refresh_token)\n    }\n  }\n  \n  function cleanConnection(){\n    console.log(localStorage.access_token, localStorage.refresh_token)\n    localStorage.access_token = \"\"\n    localStorage.refresh_token = \"\"\n    setConnection({})\n    props.history.goBack(null)\n  }\n\n  useEffect(() => { \n    getTokenAuthorization()  \n  }, [])\n\n  return (\n    <div>\n      <p>seu access token: {connection.access_token??connection.error}</p>\n      <p>seu refresh token: {connection.refresh_token??connection.error_description}</p>\n      <button onClick={cleanConnection}>zerar bangue</button>\n    </div>\n  );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}